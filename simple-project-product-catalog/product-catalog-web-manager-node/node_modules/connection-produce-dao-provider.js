var mysql = require('mysql')

var connection_config = {
	host:"192.168.0.13",
	user: "root",
	password: "change-me",
	database: "product_catalog",
	insecureAuth: true
};

var connection;

exports.selectAllProducts = function(callback) {
	getConnection(
		(con) => {
			con.query('select * from products', (err, res, fields) => {
				if(err) {
					throw err;
				} else {
					console.log(res);
					callback(res);
				}
			});
		},
		(error) => {
			console.log('Failed to request all products', error);
			throw error;
		}
	);
}

exports.selectProductForId = function(id, callback) {
	getConnection(
		(con) => {
			con.query('select * from products where id = \'' + id + '\'', (err, res, fields) => {
				if(err) {
					throw err;
				} else {
					console.log(res);
					callback(res);
				}
			});
		},
		(error) => {
			console.log('Failed to request product with id [' + id + ']', error);
			throw error;
		}
	); 
}

exports.createProduct = function(name, description, callback) {
	getConnection(
		(con) => {
			con.query('insert into products (name, description) values (\'' + name + '\', \'' + description + '\')', (err, res, fields) => {
				if(err) {
					throw err;
				} else {
					console.log(res);
					if(res.affectedRows == 1) {
						results = {
							id: res.insertId,
							name: name,
							description: description
						}
						callback(results);
					} else {
						throw 'Product not created'
					}
				}
			});
		},
		(error) => {
			console.log('Failed to create product with name [' + name + ']', error);
			throw error;
		}
	); 
}

exports.deleteProduct = function(id, callback) {
	getConnection(
		(con) => {
			con.query('delete from products where id=' + id, (err, res, fields) => {
				if(err) {
					throw err;
				} else {
					console.log(res);
					if(res.affectedRows == 1) {
						results = {
							id: res.insertId,
							name: name,
							description: description
						}
						callback(results);
					} else {
						throw 'Product not deleted'
					}
				}
			});
		},
		(error) => {
			console.log('Failed to delete product with id [' + id + ']', error);
			throw error;
		}
	); 
}

function getConnection(callback, errorHandler) {
	connection = mysql.createConnection(connection_config);
	
	connection.connect((error) => {
		if(error) {
			console.log('Error on connecting to db', error);
			errorHandler(error);
		} else {
			callback(connection)
		}
	});
	
	connection.on('error', (error) => {
		console.log('Problem with DB connection', error);
		errorHandler(error)
	});
}